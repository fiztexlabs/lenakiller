from math import *

# ЗАДАЕМ ОСНОВНЫЕ ПЕРЕМЕННЫЕ

# ~~~~~~~~~~~~~~~~~~~~ Входные параметры змеевика ~~~~~~~~~~~~~~~~~~~~

# Первое приблежение теплообменной площади
S_ob = 27.54 

# Первое приближение активной высоты навивки 
H_nav_zm_teor = 1.521 

# Наружный диаметр трубки
d_trubki_nar = 16.e-3 

# Внутренний диаметр трубки
d_trubki_vn = 12.4e-3 

# Первое приблежение общего количества трубок
m_trubok = 44 

# Первое прибдежение количества рядов навивки
n_ryadov = 5 

# Горизонтальный шаг змеевика
S1_schag_gor = 17.e-3 

# Вертикальный шаг змеевика
S2_schag_vert = 17.e-3 

# Первое приближение диаметра первого ряда змеевика
D_nav_zm_1 = 350.e-3

# Первое приближение диаметра первого ряда навивки в трубной доске
D_tr_d_1 = 300.e-3

# Минимальное расстояние между заделками в трубные доски
b_tr_d_min = 20.e-3


#   ~~~~~~~~~~~~~~~~~~~~~~~ 
#   Параметры трубной доски
#   ~~~~~~~~~~~~~~~~~~~~~~~ 
# Можно потом сделать варианты компоновки трубной доски
# 1. Стандартная трубная доска
# 2. Коллектор 
# 3. Разнесенные коллектора от 2 и более

#  Изначально задаемся количеством трубок и от этого пляшем 
#  Здесь еще пользователь должен задать минимальное расстояние между заделками трубок и исходя из количества трубок, мин расстояния 
#  и количества рядов с заходностью формируем количество рядов в трубной доске формируя плюс минус треугольник

#   ~~~~~~~~~~~~~~~~~~~~~~~~ 
#   Стандартная трубня доска
#   ~~~~~~~~~~~~~~~~~~~~~~~~  

# Количество рядов отверстий в трубной доске
n_tr_dosk = 3
# Высчитываем длину окружности в первом ряду заделки в трубную доску
L_tr_d_1 = D_tr_d_1 * pi
# Смотрим сколько помещается трубок 
N_tr_dosk_1_teor = L_tr_d_1/b_tr_d_min
N_tr_dosk_1 = ceil(N_tr_dosk_1_teor)
# Окей у нас есть количество что помещается и количество рядов навивки
# Лучше трубки раскидывать так, чтоб в первом ряду было их поменьше на какоето количество
# Но тут мы также зависим от количества трубок в рядах навивки ибо не хотим, чтоб трубку из первого ряда на трубной доске тянули на последний ряд навивки
# Ну и по логике нам все равно надо предварительно посчитать ряды навивки змеевика чтоб все сошлось




l_zm = S_ob/(pi*d_trubki_nar*m_trubok)


# Объявляем переменные для формирования массива

D_ryad = []
K_otn_D = []
Z_teor = [] 
Z_deystv = []
n_ob_zm = []
n_ob_zm_teor = []
A_nav = [] 
# l_zm = []
l_zm_summ = []
H_nav_zm = []

# Считается каждый ряд отдельно

# РАСЧЕТ ТРУБНОЙ СИСТЕМЫ
Z_sredn=m_trubok/n_ryadov # Средняя заходность
D_sredn=((D_nav_zm_1+2*n_ryadov*S1_schag_gor)+D_nav_zm_1)/2 # Средний диаметр навивки
# b_zazor=((D_nav_zm_1+n_ryadov*S1_schag_gor)-D_nav_zm_1)/2 # Ширина кольцевого зазора

for i in range(n_ryadov):
        
    # Диаметр ряда навивки
    D_ryad.append(D_nav_zm_1+S1_schag_gor*2*i) 

    # Отношение для определения заходности
    K_otn_D.append(D_sredn/D_ryad[i]) 

    # Теоретическая заходность для ряда i
    Z_teor.append(Z_sredn/K_otn_D[i]) 

    # Фактическая заходность для ряда i
    Z_deystv.append(ceil(Z_teor[i])) 

    # Угол навивки змеевика в пересчете на значение угла
    A_nav.append(degrees(atan(S2_schag_vert*Z_deystv[i]/(pi*D_ryad[i])))) 

    # Число оборотов змеевика в ряду теоретическое
    n_ob_zm_teor.append(H_nav_zm_teor/(S2_schag_vert*Z_deystv[i])) 

    # Фактическое число оборотов змеевика в ряду
    # Сделать дробный шаг оборотов основываясь на заделку в трубную доску 
    n_ob_zm.append(ceil(n_ob_zm_teor[i])) 

    # Фактическая высота навивики ряда змеевика
    H_nav_zm.append(Z_deystv[i]*S2_schag_vert*n_ob_zm[i]) 

    # Длина змеевика в ряду навивки
    # l_zm.append(pi*D_ryad[i]*n_ob_zm[i]/cos(radians(A_nav[i]))) 

    # Общая длинна змеевиков в ряду навивки
    l_zm_summ.append(l_zm*Z_deystv[i])  


    print("Ряд " + str(i) + " количество змеевиков " + str(Z_deystv[i]) + " длина трубок " + str(l_zm) + " высота навивки " + str(H_nav_zm[i]) + " количество витков " + str(n_ob_zm[i]))

print("Площадь " + str(sum(l_zm_summ)*pi*d_trubki_nar))

# class Zmeevik:
#     init(self):
#         self.var1 = 0
#         self.var3 = 0
#         self.var3 = 0 
# [23:35]
# Zmeevik zm
# print(zm.var1)

    
# print("xyi")
# for j in range(m_tr_dosk_1):
#     xyi[j]
# B # Угол между точками заделки концов трубы в нижнюю и в верхнюю трубные доски
# D_otg_verh # 
# D_otg_niz #
# H_schag_zm #
# H_gab #
# H_ob=1000 #"мм" "Общая высота"
# D=100 #"мм" "Диаметр"0
# A=math.atan(h/2) #Угол подьема


# Расчет геометрии змеевика
# расчета необходимой площади
# расчета рядов в теплообменной поверхности
# отгибки из трубных досок

# Расчет теплогидравлический
# сказал типа ок ему или нет
 
# и выдал данные в NX или компасе


# НАДО ИХ РАСПРЕДЕЛИТЬ ПО РЯДАМ и задать им диаметры

# m_tr_dosk_1 = 12 # Количество отверстий в первом ряду трубной доски
# m_tr_dosk_2 = 12 # Количество отверстий во втором ряду трубной доски
# m_tr_dosk_3 = 12 # Количество отверстий в третьем ряду трубной доски
# D_zad_tr_1 = 400 # Диаметр первого ряда заделки в трубной доске
# D_zad_tr_2 = 450 # Диаметр второго ряда заделки в трубной доске
# D_zad_tr_3 = 500 # Диаметр третьего ряда заделки в трубной доске
# l_okr_sekt = pi*D_nav_zm_1/m_tr_dosk_1 # Длина окружности между началами отгибок соседних трубок
# n_zm_akt = 1 # Порядковый номер активного змеевика в ряду навивки